#!/bin/bash

# Détecte la version PHP installée
PHP_VERSION_MAJOR=$(php -r "echo PHP_MAJOR_VERSION;")
PHP_VERSION_MINOR=$(php -r "echo PHP_MINOR_VERSION;")

# Vérifie si l'extension Heredia est déjà chargée
is_extension_loaded() {
    php -m | grep -q 'heredia'
    return $?
}

# Accéder au répertoire de l'extension
EXT_DIR="$(pwd)/bin/epaphrodites/cbuild/extension"
MODULE_DIR="${EXT_DIR}/modules"

# Fonction pour compiler l'extension Heredia pour Linux/Mac
compile_extension_linux_mac() {
    echo "Compilation de l'extension Heredia pour $OSTYPE avec PHP $PHP_VERSION_MAJOR.$PHP_VERSION_MINOR"

    # Vérifie que nous sommes dans le bon répertoire
    if [ ! -d "$EXT_DIR" ]; then
        echo "Erreur: le répertoire $EXT_DIR n'existe pas."
        exit 1
    fi

    cd "$EXT_DIR" || { echo "Erreur: impossible d'accéder à $EXT_DIR"; exit 1; }

    # Vérifie si phpize est disponible
    if ! command -v phpize &>/dev/null; then
        echo "Erreur: phpize non trouvé. Installez-le avec : sudo apt install php-dev"
        exit 1
    fi

    # Vérifie si les permissions sont correctes
    if [ ! -w "$EXT_DIR" ]; then
        echo "Erreur: Pas de permission d'écriture dans $EXT_DIR. Utilisation de sudo."
        sudo chown -R $USER:$USER "$EXT_DIR" || { echo "Erreur: impossible de modifier les permissions."; exit 1; }
    fi

    # Vérifie si config.h.in existe, sinon on génère les fichiers de configuration
    if [ ! -f "config.h.in" ]; then
        echo "config.h.in manquant. Tentative de régénération des fichiers de configuration avec autoreconf."
        autoreconf -i || { echo "Erreur: autoreconf a échoué"; exit 1; }
    fi

    # Compilation de l'extension
    phpize || { echo "Erreur: phpize a échoué"; exit 1; }
    ./configure --enable-heredia || { echo "Erreur: échec de la configuration"; exit 1; }
    make || { echo "Erreur: échec de la compilation"; exit 1; }
    sudo make install || { echo "Erreur: échec de l'installation"; exit 1; }

    # Trouver le répertoire d'extensions PHP
    EXT_PATH=$(php -r "echo ini_get('extension_dir');")

    if [ -z "$EXT_PATH" ]; then
        echo "Erreur: impossible de déterminer le répertoire des extensions PHP."
        exit 1
    fi

    sudo ln -sf "${MODULE_DIR}/heredia.so" "$EXT_PATH/heredia.so" || { echo "Erreur: échec de la création du lien symbolique"; exit 1; }

    # Trouver le fichier php.ini et ajouter l'extension
    PHP_INI_FILE=$(php --ini | grep "Loaded Configuration File" | awk '{print $4}')
    
    if [ -z "$PHP_INI_FILE" ]; then
        echo "Erreur: impossible de localiser php.ini"
        exit 1
    fi

    echo "extension=heredia.so" | sudo tee -a "$PHP_INI_FILE"

    # Redémarrer PHP-FPM si nécessaire
    if command -v systemctl &>/dev/null; then
        sudo systemctl restart php$PHP_VERSION_MAJOR-fpm || { echo "Erreur: échec du redémarrage de PHP-FPM"; exit 1; }
    fi

    # Vérification de l'installation
    php -m | grep -q 'heredia'
    if [ $? -eq 0 ]; then
        echo "L'extension Heredia est installée et activée."
    else
        echo "L'extension Heredia n'a pas pu être installée."
        exit 1
    fi
}

# Détecter le système d'exploitation et appeler la fonction de compilation appropriée
if is_extension_loaded; then
    echo "L'extension Heredia est déjà installée et activée."
else
    case "$OSTYPE" in
        linux*|darwin*) compile_extension_linux_mac ;;
        *) echo "Système d'exploitation non supporté"; exit 1 ;;
    esac
fi
