#!/bin/bash

# Detect the installed PHP version
PHP_VERSION=$(php -r "echo PHP_VERSION_ID;")
PHP_VERSION_MAJOR_MINOR=$((PHP_VERSION / 10000))

# Check if the epaphrodites extension is already loaded
is_extension_loaded() {
    php -m | grep -q 'epaphrodites'
    return $?
}

# Go to the extension directory
cd bin/epaphrodites/cbuild/extension || exit 1

# Function to compile the extension for Linux/Mac
compile_extension_linux_mac() {
    echo "Compiling the Epaphrodites extension for $OSTYPE with PHP $PHP_VERSION_MAJOR_MINOR"

    # Prepare the extension for compilation
    phpize

    # Configure the extension
    ./configure --enable-epaphrodites

    # Compile the extension (even if it's already installed)
    make

    # Install the extension if not already installed
    sudo make install

    # Add the extension to the php.ini (based on the PHP version)
    echo "extension=epaphrodites.so" | sudo tee -a /etc/php/$PHP_VERSION_MAJOR_MINOR/cli/php.ini
    echo "extension=epaphrodites.so" | sudo tee -a /etc/php/$PHP_VERSION_MAJOR_MINOR/fpm/php.ini

    # Restart PHP-FPM if used
    sudo systemctl restart php$PHP_VERSION_MAJOR_MINOR-fpm

    # Verify installation
    php -m | grep epaphrodites
    if [ $? -eq 0 ]; then
        echo "Epaphrodites extension is installed and enabled."
    else
        echo "Epaphrodites extension could not be installed."
    fi
}

# Function to compile the extension for Windows (with Cygwin or MinGW)
compile_extension_windows() {
    echo "Compiling the Epaphrodites extension for Windows with PHP $PHP_VERSION_MAJOR_MINOR"

    # Set necessary variables
    EXT_DIR="bin/epaphrodites/cbuild/extension"
    PHP_DIR="C:/path/to/php"  # Replace with the path to PHP on Windows
    PHPIZE="$PHP_DIR/phpize.exe"
    MAKE="$PHP_DIR/nmake.exe"

    # Go to the extension directory
    cd $EXT_DIR

    # Prepare the extension for compilation
    $PHPIZE

    # Configure the extension
    ./configure --enable-epaphrodites --prefix=$PHP_DIR

    # Compile the extension (even if it's already installed)
    $MAKE

    # Install the extension if not already installed
    $MAKE install

    # Add the extension to the php.ini (based on the PHP version)
    echo "extension=epaphrodites.dll" >> $PHP_DIR/php.ini

    # Verify
    php -m | findstr epaphrodites
    if [ $? -eq 0 ]; then
        echo "Epaphrodites extension is installed and enabled on Windows."
    else
        echo "Epaphrodites extension could not be installed."
    fi
}

# Detect the OS and call the appropriate compile function
if is_extension_loaded; then
    echo "Epaphrodites extension is already installed and enabled. Continuing compilation to account for new data."
    # Continue the compilation without reinstalling the extension
    compile_extension_linux_mac
elif [[ "$OSTYPE" == "linux-gnu"* ]] || [[ "$OSTYPE" == "darwin"* ]]; then
    compile_extension_linux_mac
elif [[ "$OSTYPE" == "cygwin" ]] || [[ "$OSTYPE" == "mingw"* ]]; then
    compile_extension_windows
else
    echo "Operating system not supported for automatic installation."
    exit 1
fi