# ==================== CONFIG ==================== #

$extName = "shlomo"
$soName = "$extName.dll"  # .dll sous Windows
$configFile = "config.m4"
$extPath = "..\extension"
$configPath = "..\config\$configFile"
$libraryPath = "bin\epaphrodites\cbuild\library"

# ==================== COLORS ==================== #
function Write-Green { param($msg) ; Write-Host $msg -ForegroundColor Green }
function Write-Red   { param($msg) ; Write-Host $msg -ForegroundColor Red }
function Wait-Animation {
    Write-Host -NoNewline "‚è≥ Please wait"
    1..3 | ForEach-Object {
        Start-Sleep -Milliseconds 500
        Write-Host -NoNewline "."
    }
    Write-Host ""
}

# ==================== DIRECTORY SETUP ==================== #

Write-Host "üìÅ [0/8] Ensuring 'library' directory exists..."
if (-Not (Test-Path $libraryPath)) {
    New-Item -ItemType Directory -Path $libraryPath | Out-Null
}
Write-Green "‚úÖ Directory ready"

# ==================== BUILD PROCESS ==================== #

Set-Location $libraryPath

Write-Host "üîó [1/8] Copying config.m4..."
Copy-Item -Path $configPath -Destination . -Force
Write-Green "‚úÖ Config copied"

Write-Host "üßπ [2/8] Cleaning previous builds..."
Wait-Animation
Invoke-Expression "make clean"
Write-Green "‚úÖ Cleaned"

Write-Host "üß™ [3/8] Running phpize..."
Wait-Animation
Invoke-Expression "phpize"
Write-Green "‚úÖ Phpize done"

Write-Host "‚öôÔ∏è [4/8] Configuring extension..."
Wait-Animation
Invoke-Expression "./configure --enable-$extName"
Write-Green "‚úÖ Configuration successful"

Write-Host "üî® [5/8] Compiling extension..."
Wait-Animation
Invoke-Expression "make"
if ($LASTEXITCODE -ne 0) {
    Write-Red "‚ùå Build failed. Please check your C code."
    exit 1
}
Write-Green "‚úÖ Build successful"

Write-Host "üì¶ [6/8] Copying DLL to extension folder..."
$soSource = "modules\$soName"
Copy-Item -Path $soSource -Destination $extPath -Force
Write-Green "‚úÖ Copied to $extPath"

# ==================== INI REGISTRATION ==================== #

Write-Host "üìÑ [7/8] Registering extension in php.ini..."

# Detect php.ini path
$phpInfo = php --ini
$iniLine = $phpInfo | Select-String "Loaded Configuration File" | ForEach-Object { $_.ToString() }
$iniPath = $iniLine -replace '.*:\s+', ''

if (-not (Test-Path $iniPath)) {
    Write-Red "‚ùå Could not find php.ini. Aborting."
    exit 1
}

$extFullPath = Resolve-Path "$extPath\$soName"

if ((Get-Content $iniPath) -notmatch "$soName") {
    Add-Content -Path $iniPath -Value "`n; Shlomo Extension`nextension=$extFullPath"
    Write-Green "‚úÖ Added to php.ini"
} else {
    Write-Host "‚ÑπÔ∏è Extension already registered in php.ini"
}

# ==================== RESTART SUGGESTION ==================== #

Write-Host "‚ôªÔ∏è [8/8] Please restart your web server (Apache/Nginx) manually:"
Write-Host "- For XAMPP: Restart Apache via Control Panel"
Write-Host "- For WAMP: Click on WAMP icon ‚Üí Restart all services"
Write-Host "- For Laragon: Click 'Reload' or restart Apache"

Write-Green "üéâ Extension '$extName' built and registered successfully!"
