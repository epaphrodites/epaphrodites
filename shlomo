#!/bin/bash

# ==================== CONFIG ==================== #

EXT_NAME="$1"
SO_NAME="$EXT_NAME.so"
CONFIG_FILE="config.m4"
EXT_PATH="../extension"
CONFIG_PATH="../config/$EXT_NAME/$CONFIG_FILE"

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# ==================== FUNCTIONS ==================== #

wait_animation() {
  echo -n "⏳ Please wait"
  for i in {1..3}; do
    sleep 0.5
    echo -n "."
  done
  echo
}

detect_php_version() {
  php -r 'echo PHP_MAJOR_VERSION . "." . PHP_MINOR_VERSION;' 2>/dev/null
}

find_conf_d_path() {
  php --ini | grep "Scan for additional .ini files in" | awk -F': ' '{print $2}'
}

restart_php_service() {
  echo "♻️  Restarting PHP service if needed..."

  if command -v brew &>/dev/null; then
    echo "🔁 Detected Homebrew (macOS)"
    brew services restart php
  elif command -v systemctl &>/dev/null; then
    php_version=$(detect_php_version)
    echo "🔁 Detected systemd (Linux), trying to restart php-fpm..."
    sudo systemctl restart "php${php_version}-fpm" || sudo systemctl restart php-fpm
  elif command -v apachectl &>/dev/null; then
    echo "🔁 Apache detected"
    sudo apachectl restart
  else
    echo -e "${RED}⚠️  No known service manager detected. Please restart PHP manually.${NC}"
  fi
}

# ==================== SCRIPT START ==================== #

echo "📁 [0/8] Ensuring 'library' directory exists..."
mkdir -p bin/epaphrodites/cbuild/library
echo -e "${GREEN}✅ Directory ready${NC}"

echo "🔧 [1/8] Moving into build directory..."
cd bin/epaphrodites/cbuild/library || { echo -e "${RED}❌ Failed to change directory.${NC}"; exit 1; }
echo -e "${GREEN}✅ Done${NC}"

echo "🔗 [2/8] Linking $CONFIG_FILE..."
if [ -f "$CONFIG_PATH" ]; then
  ln -sf "$CONFIG_PATH" .
  echo -e "${GREEN}✅ Link created${NC}"
else
  echo -e "${RED}❌ Config file $CONFIG_PATH not found. Please check the config directory.${NC}"
  exit 1
fi

echo "🧹 [3/8] Cleaning previous builds..."
wait_animation
make clean
echo -e "${GREEN}✅ Cleaned${NC}"

echo "🧪 [4/8] Running phpize..."
wait_animation
phpize
echo -e "${GREEN}✅ Phpize completed${NC}"

echo "⚙️ [5/8] Configuring extension with --enable-$EXT_NAME..."
wait_animation
./configure --enable-$EXT_NAME
echo -e "${GREEN}✅ Configuration successful${NC}"

echo "🔨 [6/8] Building the extension..."
wait_animation
make
if [ $? -ne 0 ]; then
  echo -e "${RED}❌ Build failed. Fix your C code and retry.${NC}"
  exit 1
fi
echo -e "${GREEN}✅ Build successful${NC}"

echo "📦 [7/8] Copying $SO_NAME to extension directory..."
cp "modules/$SO_NAME" "$EXT_PATH/"
echo -e "${GREEN}✅ Extension copied to $EXT_PATH/${NC}"

CONF_D_PATH=$(find_conf_d_path)
EXT_FULL_PATH="$(pwd | sed 's/library/extension/')/$SO_NAME"
INI_FILE="$CONF_D_PATH/${EXT_NAME}.ini"

echo "📄 [8/8] Writing $INI_FILE..."
echo "extension=$EXT_FULL_PATH" | sudo tee "$INI_FILE" >/dev/null
echo -e "${GREEN}✅ INI registered: $INI_FILE${NC}"

# Restart PHP (optional if used as CLI only)
restart_php_service

echo -e "${GREEN}🎉 Extension '$EXT_NAME' built and loaded successfully!${NC}"
